<aside class="offcanvas offcanvas-end" tabindex="-1" id="offcanvas_cart">
    @if (this.shoppingCart != null)
    {
        <div class="offcanvas-header">
            <h5 class="offcanvas-title">Your cart @shoppingCart.ShoppingCartItems.Count </h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
        <div class="offcanvas-body">

            @foreach (var item in this.shoppingCart.ShoppingCartItems)
            {
                <figure class="itemside mb-4">
                    <div class="aside">
                        <img src="@item.ThumbnailPath" class="border img-sm rounded">
                    </div>
                    <figcaption class="info">
                        <a href="#" class="btn btn-icon btn-light float-end"><i class="fa fa-trash"></i></a>
                        <p> @item.ProductName</p>
                        <span class="text-muted">@item.Quantity x @item.Price </span> <br>
                        <strong class="price"> @item.Amount </strong>
                    </figcaption>
                </figure>
            }

            <hr>

            <p class="mb-3 text-center"> Subtotal:  <strong class="text-danger"> @shoppingCart.Sum </strong></p>
            <div class="mb-3">
                <a href="#" class="btn w-100 btn-success"> Checkout </a>
            </div>
            <p class="mb-3 text-center"> <img src="images/misc/payments.png" height="22">  </p>
        </div>
    }
    else
    {
        <div class="offcanvas-header">
            <h5 class="offcanvas-title">Your cart </h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>
    }
</aside>

@code {
    private ShoppingCartModel? shoppingCart;

    protected override void OnInitialized()
    {
        Bus.Subscribe<SocketResponse<ShoppingCartModel>>(UpdateCartItems);
    }

    private void UpdateCartItems(MessageArgs args)
    {
        var message = args.GetMessage<SocketResponse<ShoppingCartModel>>();

        if (message.Succeeded)
        {
            shoppingCart = message.Data;
            StateHasChanged();
        }
    }
}