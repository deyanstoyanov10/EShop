@page "/register"
@inject NavigationManager NavigationManager

@if (ShowErrors)
{
    foreach (var error in Errors)
    {
        <div class="alert alert-danger" role="alert">
            <p>@error.Description</p>
        </div>
    }
}

<section class="padding-y bg-light" style="min-height:90vh">
    <div class="container">
        <div class="card shadow mx-auto" style="max-width:400px; margin-top:40px;">
            <div class="card-body">
                <h4 class="card-title mb-4">Sign Up</h4>
                <EditForm Model="registerModel" OnValidSubmit="HandleRegister">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="row gx-2">
                        <div class="col-6 mb-3">
                            <label class="form-label">First name</label>
                            <InputText class="form-control" @bind-Value="registerModel.FirstName" />
                        </div>
                        <div class="col-6 mb-3">
                            <label class="form-label">Last name</label>
                            <InputText class="form-control" @bind-Value="registerModel.LastName" />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Username</label>
                        <InputText class="form-control" placeholder="Type username" @bind-Value="registerModel.Username" />
                        <ValidationMessage For="@(() => registerModel.Username)" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <InputText class="form-control" placeholder="Type email" @bind-Value="registerModel.Email" />
                        <ValidationMessage For="@(() => registerModel.Email)" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Password</label>
                        <InputText class="form-control" placeholder="At least 6 characters." type="password" @bind-Value="registerModel.Password" />
                        <ValidationMessage For="@(() => registerModel.Password)" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Confirm password</label>
                        <InputText class="form-control" placeholder="" type="password" @bind-Value="registerModel.ConfirmPassword" />
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Register</button>
                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {
    private RegisterUserInputModel registerModel = new RegisterUserInputModel();

    private bool ShowErrors;
    private IEnumerable<Error> Errors = new List<Error>();

    private async Task HandleRegister()
    {
        ShowErrors = false;

        var result = await AuthService.Register(registerModel);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
        }
    }
}
